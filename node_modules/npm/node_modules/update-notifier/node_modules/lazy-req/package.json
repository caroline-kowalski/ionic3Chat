{
  "_from": "lazy-req@^2.0.0",
  "_id": "lazy-req@2.0.0",
  "_integrity": "sha1-yUUKNj7N2i5vDHATKtTzf48G8rQ=",
  "_location": "/npm/update-notifier/lazy-req",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "lazy-req@^2.0.0",
    "name": "lazy-req",
    "escapedName": "lazy-req",
    "rawSpec": "^2.0.0",
    "saveSpec": null,
    "fetchSpec": "^2.0.0"
  },
  "_requiredBy": [
    "/npm/update-notifier"
  ],
  "_resolved": "https://registry.npmjs.org/lazy-req/-/lazy-req-2.0.0.tgz",
  "_shasum": "c9450a363ecdda2e6f0c70132ad4f37f8f06f2b4",
  "_shrinkwrap": null,
  "_spec": "lazy-req@^2.0.0",
  "_where": "/Users/zkat/Documents/code/npm/node_modules/update-notifier",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bin": null,
  "bugs": {
    "url": "https://github.com/sindresorhus/lazy-req/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Jorge Bucaran",
      "email": "jbucaran@me.com"
    }
  ],
  "dependencies": {},
  "deprecated": false,
  "description": "Require modules lazily",
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/lazy-req#readme",
  "keywords": [
    "require",
    "load",
    "module",
    "modules",
    "lazy",
    "lazily",
    "defer",
    "deferred",
    "proxy",
    "proxies"
  ],
  "license": "MIT",
  "name": "lazy-req",
  "optionalDependencies": {},
  "peerDependencies": {},
  "readme": "# lazy-req [![Build Status](https://travis-ci.org/sindresorhus/lazy-req.svg?branch=master)](https://travis-ci.org/sindresorhus/lazy-req)\n\n> Require modules lazily\n\n\n## Install\n\n```\n$ npm install --save lazy-req\n```\n\n\n## Usage\n\n```js\n// pass in `require` or a custom require function\nconst lazyReq = require('lazy-req')(require);\nconst _ = lazyReq('lodash');\n\n// Where you would normally do\n_.isNumber(2);\n\n// You now instead call it as a function\n_().isNumber(2);\n\n// It's cached on consecutive calls\n_().isString('unicorn');\n\n// Extract lazy variations of the props you need\nconst members = lazyReq('lodash')('isNumber', 'isString');\n\n// Useful when using destructuring assignment in ES2015\nconst {isNumber, isString} = lazyReq('lodash')('isNumber', 'isString');\n\n// Works out of the box for functions and regular properties\nconst stuff = lazyReq('./math-lib')('sum', 'PHI');\nconsole.log(stuff.sum(1, 2)); // => 3\nconsole.log(stuff.PHI); // => 1.618033\n```\n\n### Proxy support in Node.js 6 or later\n\nIf you use Node.js 6 or later, you can take advantage of ES2015 proxies and don't need to call it as a function.\n\n```js\nconst lazyReq = require('lazy-req').proxy(require);\nconst _ = lazyReq('lodash');\n\n// No need to call it as a function but still lazily required\n_.isNumber(2);\n```\n\n## Related\n\n- [resolve-from](https://github.com/sindresorhus/resolve-from) - Resolve the path of a module from a given path\n- [req-from](https://github.com/sindresorhus/req-from) - Require a module from a given path\n- [resolve-pkg](https://github.com/sindresorhus/resolve-pkg) - Resolve the path of a package regardless of it having an entry point\n- [lazy-value](https://github.com/sindresorhus/lazy-value) - Create a lazily evaluated value\n- [define-lazy-prop](https://github.com/sindresorhus/define-lazy-prop) - Define a lazily evaluated property on an object\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/lazy-req.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "2.0.0"
}
