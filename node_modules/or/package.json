{
  "_args": [
    [
      {
        "raw": "or",
        "scope": null,
        "escapedName": "or",
        "name": "or",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\acer\\Desktop\\Achat_ionic\\ionic3Chat"
    ]
  ],
  "_from": "or@latest",
  "_id": "or@0.2.0",
  "_inCache": true,
  "_location": "/or",
  "_npmUser": {
    "name": "ralt",
    "email": "florian@margaine.com"
  },
  "_npmVersion": "1.1.59",
  "_phantomChildren": {},
  "_requested": {
    "raw": "or",
    "scope": null,
    "escapedName": "or",
    "name": "or",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/or/-/or-0.2.0.tgz",
  "_shasum": "9904ea61e25943f935e20f4f4749e0a141a82b6a",
  "_shrinkwrap": null,
  "_spec": "or",
  "_where": "C:\\Users\\acer\\Desktop\\Achat_ionic\\ionic3Chat",
  "author": {
    "name": "Florian Margaine",
    "email": "florian@margaine.com",
    "url": "http://margaine.com"
  },
  "bugs": {
    "url": "https://github.com/Ralt/or/issues"
  },
  "dependencies": {},
  "description": "Returns an element from an array when it matches a condition",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "9904ea61e25943f935e20f4f4749e0a141a82b6a",
    "tarball": "https://registry.npmjs.org/or/-/or-0.2.0.tgz"
  },
  "engines": {
    "node": "*"
  },
  "homepage": "https://github.com/Ralt/or#readme",
  "keywords": [
    "array",
    "utils"
  ],
  "main": "lib/or",
  "maintainers": [
    {
      "name": "ralt",
      "email": "florian@margaine.com"
    }
  ],
  "name": "or",
  "optionalDependencies": {},
  "readme": "Returns the element of an array when the callback returns true.\n\nPurpose\n---\n\nThis module provides a similar function as `Array.prototype.filter`, but\nit returns the element, not an array. And it stops looping as soon as it\nfinds a result.\n\nUsage\n---\n\n```javascript\nvar arr = ['item', 'other', 'finally'];\n\nvar item = or(arr, function(item) {\n    return item === 'other';\n});\n\nconsole.log(item); // \"other\"\n\n// Real world example\nvar matchesSelector = or(['matchesSelector', 'mozMatchesSelector',\n    'webkitMatchesSelector', 'oMatchesSelector',\n    'msMatchesSelector'], function(shim) {\n    return shim in document.documentElement;\n});\n\ndocument.getElementById('some')[matchesSelector]('#some'); // true\n```\n\nAPI\n---\n\nThe module returns a function accepting the following arguments:\n\n- `array`: the array on which to iterate\n- `callback`: the function being called\n- `context`: the context on which to call the callback\n\nContributors\n---\n\n- [Florian Margaine](http://margaine.com)\n\nLicense\n---\n\nMIT License.\n",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Ralt/or.git"
  },
  "version": "0.2.0"
}
